{"ast":null,"code":"var _jsxFileName = \"/Users/syedtaha/Desktop/redis/distributed_kv_store/dashboard/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NodeStatusCard from './components/NodeStatusCard';\nimport KeyValueForm from './components/KeyValueForm';\nimport KeyDistributionChart from './components/KeyDistributionChart';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NODES = [{\n  id: 'node_1',\n  port: 8000\n}, {\n  id: 'node_2',\n  port: 8001\n}, {\n  id: 'node_3',\n  port: 8002\n}];\nfunction App() {\n  _s();\n  const [nodeStatuses, setNodeStatuses] = useState({});\n  const [selectedNode, setSelectedNode] = useState(NODES[0]);\n  useEffect(() => {\n    const fetchNodeStatuses = async () => {\n      const statuses = {};\n      for (const node of NODES) {\n        try {\n          const response = await fetch(`http://localhost:${node.port}/status`);\n          const data = await response.json();\n          statuses[node.id] = data;\n        } catch (error) {\n          statuses[node.id] = {\n            status: 'unhealthy',\n            error: error.message\n          };\n        }\n      }\n      setNodeStatuses(statuses);\n    };\n    fetchNodeStatuses();\n    const interval = setInterval(fetchNodeStatuses, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Distributed Key-Value Store Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-status-grid\",\n        children: NODES.map(node => /*#__PURE__*/_jsxDEV(NodeStatusCard, {\n          node: node,\n          status: nodeStatuses[node.id],\n          isSelected: selectedNode.id === node.id,\n          onSelect: () => setSelectedNode(node)\n        }, node.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-panel\",\n          children: /*#__PURE__*/_jsxDEV(KeyValueForm, {\n            selectedNode: selectedNode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-panel\",\n          children: /*#__PURE__*/_jsxDEV(KeyDistributionChart, {\n            nodes: NODES,\n            nodeStatuses: nodeStatuses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7VULuwbbfwPawCuynSSN/vmOgQg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NodeStatusCard","KeyValueForm","KeyDistributionChart","jsxDEV","_jsxDEV","NODES","id","port","App","_s","nodeStatuses","setNodeStatuses","selectedNode","setSelectedNode","fetchNodeStatuses","statuses","node","response","fetch","data","json","error","status","message","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","isSelected","onSelect","nodes","_c","$RefreshReg$"],"sources":["/Users/syedtaha/Desktop/redis/distributed_kv_store/dashboard/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NodeStatusCard from './components/NodeStatusCard';\nimport KeyValueForm from './components/KeyValueForm';\nimport KeyDistributionChart from './components/KeyDistributionChart';\nimport './App.css';\n\nconst NODES = [\n  { id: 'node_1', port: 8000 },\n  { id: 'node_2', port: 8001 },\n  { id: 'node_3', port: 8002 }\n];\n\nfunction App() {\n  const [nodeStatuses, setNodeStatuses] = useState({});\n  const [selectedNode, setSelectedNode] = useState(NODES[0]);\n\n  useEffect(() => {\n    const fetchNodeStatuses = async () => {\n      const statuses = {};\n      for (const node of NODES) {\n        try {\n          const response = await fetch(`http://localhost:${node.port}/status`);\n          const data = await response.json();\n          statuses[node.id] = data;\n        } catch (error) {\n          statuses[node.id] = { status: 'unhealthy', error: error.message };\n        }\n      }\n      setNodeStatuses(statuses);\n    };\n\n    fetchNodeStatuses();\n    const interval = setInterval(fetchNodeStatuses, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Distributed Key-Value Store Dashboard</h1>\n      </header>\n\n      <main className=\"App-main\">\n        <div className=\"node-status-grid\">\n          {NODES.map(node => (\n            <NodeStatusCard\n              key={node.id}\n              node={node}\n              status={nodeStatuses[node.id]}\n              isSelected={selectedNode.id === node.id}\n              onSelect={() => setSelectedNode(node)}\n            />\n          ))}\n        </div>\n\n        <div className=\"dashboard-content\">\n          <div className=\"left-panel\">\n            <KeyValueForm selectedNode={selectedNode} />\n          </div>\n          <div className=\"right-panel\">\n            <KeyDistributionChart nodes={NODES} nodeStatuses={nodeStatuses} />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}